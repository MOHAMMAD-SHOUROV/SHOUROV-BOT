module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "1.0.0",
  credits: "Shourov",
  description: "Automatically re-add members who leave the group"
};

module.exports.run = async ({ event, api, Threads, Users }) => {
  try {
    const threadID = event.threadID;
    const userID = event.logMessageData.leftParticipantFbId;

    const threadData = (await Threads.getData(threadID)).data || {};

    // ржпржжрж┐ antiout ржмржирзНржз ржерж╛ржХрзЗ
    if (threadData.antiout === false) return;

    // ржпржжрж┐ ржмржЯ ржирж┐ржЬрзЗ group ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯ, ржХрж┐ржЫрзБ ржирж╛ ржХрж░рзЗ ржлрзЗрж░ржд ржпрж╛ржХ
    if (userID === api.getCurrentUserID()) return;

    // ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо ржмрзЗрж░ ржХрж░рж╛
    const userName = global.data.userName.get(userID) || await Users.getNameUser(userID);

    // рж╕рзЗ ржирж┐ржЬрзЗ ржмрзЗрж░ рж╣рзЯрзЗржЫрзЗ ржХрж┐ржирж╛ ржирж╛ ржХрж┐ ржХрзЗржЙ ржмрзЗрж░ ржХрж░рзЗ ржжрж┐рзЯрзЗржЫрзЗ
    const isSelfOut = event.author === userID;

    if (isSelfOut) {
      api.addUserToGroup(userID, threadID, async (error) => {
        if (error) {
          return api.sendMessage(
            `тЭМ ${userName} ржХрзЗ ржЖржмрж╛рж░ ржЕрзНржпрж╛ржб ржХрж░рж╛ ржЧрзЗрж▓ ржирж╛ред рж╣рзЯржд рж╕рзЗ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗ, ржЕржержмрж╛ рждрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржЕржкрж╢ржи ржмржирзНржз ржЖржЫрзЗред`,
            threadID
          );
        }

        return api.sendMessage(
          `ЁЯШИ ${userName}, рждрзБржорж┐ ржкрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛! ржЖржмрж╛рж░ рждрзЛржорж╛рзЯ ржЖржирж▓рж╛ржо!`,
          threadID
        );
      });
    }
  } catch (err) {
    console.error("[ANTI-OUT ERROR]", err);
  }
};
