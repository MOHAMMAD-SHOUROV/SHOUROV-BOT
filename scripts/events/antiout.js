module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "1.0.1",
  credits: "Shourov",
  description: "Automatically re-add members who leave the group"
};

module.exports.run = async ({ event, api, Threads, Users }) => {
  try {
    if (!event || !event.logMessageData || !event.threadID) return;

    const threadID = event.threadID;
    const userID = event.logMessageData.leftParticipantFbId;

    if (!userID) return;

    // ржпржжрж┐ ржмржЯ ржирж┐ржЬрзЗ group ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯ, ржХрж┐ржЫрзБ ржирж╛ ржХрж░рзЗ ржлрзЗрж░ржд ржпрж╛ржХ
    const botID = api.getCurrentUserID();
    if (userID === botID) return;

    const threadData = (await Threads.getData(threadID))?.data || {};
    if (threadData.antiout === false) return;

    // ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо ржмрзЗрж░ ржХрж░рж╛
    const userName =
      global.data?.userName?.get(userID) ||
      (await Users.getNameUser(userID)) ||
      "ржПржХржЬржи рж╕ржжрж╕рзНржп";

    // рж╕рзЗ ржирж┐ржЬрзЗ ржмрзЗрж░ рж╣рзЯрзЗржЫрзЗ ржХрж┐ржирж╛ ржирж╛ ржХрж┐ ржХрзЗржЙ ржмрзЗрж░ ржХрж░рзЗ ржжрж┐рзЯрзЗржЫрзЗ
    const isSelfOut = event.author === userID;

    if (!isSelfOut) return;

    api.addUserToGroup(userID, threadID, (err) => {
      if (err) {
        return api.sendMessage(
          `тЭМ ${userName} ржХрзЗ ржЖржмрж╛рж░ ржЕрзНржпрж╛ржб ржХрж░рж╛ ржЧрзЗрж▓ ржирж╛ред рж╣рзЯржд рж╕рзЗ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗ ржмрж╛ рждрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржЕржкрж╢ржи ржмржирзНржзред`,
          threadID
        );
      }

      api.sendMessage(
        `ЁЯШИ ${userName}, рждрзБржорж┐ ржкрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛! ржЖржмрж╛рж░ рждрзЛржорж╛рзЯ ржЖржирж▓рж╛ржо!`,
        threadID
      );
    });

  } catch (err) {
    console.error("тЭМ [ANTI-OUT ERROR]", err);
  }
};
