module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "1.0.1",
  credits: "Shourov",
  description: "Automatically re-add members who leave the group"
};

module.exports.run = async ({ event, api, Threads, Users }) => {
  try {
    // Event null рж╣рж▓рзЗ ржмрж╛ ржжрж░ржХрж╛рж░рж┐ ржбрзЗржЯрж╛ ржирж╛ ржерж╛ржХрж▓рзЗ рж╕рзНржХрж┐ржк ржХрж░рзЛ
    if (!event?.logMessageData?.leftParticipantFbId || !event.threadID) return;

    const threadID = event.threadID;
    const userID = event.logMessageData.leftParticipantFbId;

    // ржмржЯ ржирж┐ржЬрзЗ ржмрзЗрж░ рж╣рж▓рзЗ ржХрж┐ржЫрзБ ржХрж░рзЛ ржирж╛
    const botID = api.getCurrentUserID();
    if (userID === botID) return;

    // Anti-out рж╕ржХрзНрж░рж┐рзЯ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рзЛ
    const threadData = (await Threads.getData(threadID))?.data || {};
    if (threadData.antiout === false) return;

    // ржирж╛ржо ржмрзЗрж░ ржХрж░рзЛ
    const userName =
      global.data?.userName?.get(userID) ||
      (await Users.getNameUser(userID)) ||
      "ржПржХржЬржи рж╕ржжрж╕рзНржп";

    // ржирж┐ржЬрзЗ ржмрзЗрж░ рж╣рзЯрзЗржЫрзЗ ржХрж┐ржирж╛
    const isSelfOut = event.author === userID;
    if (!isSelfOut) return;

    // ржЖржмрж╛рж░ ржЧрзНрж░рзБржкрзЗ ржЕрзНржпрж╛ржб ржХрж░рзЛ
    api.addUserToGroup(userID, threadID, (err) => {
      if (err) {
        return api.sendMessage(
          `тЭМ ${userName} ржХрзЗ ржЖржмрж╛рж░ ржЕрзНржпрж╛ржб ржХрж░рж╛ ржЧрзЗрж▓ ржирж╛ред рж╣рзЯржд рж╕рзЗ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗ ржмрж╛ рждрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржЕржкрж╢ржи ржмржирзНржзред`,
          threadID
        );
      }

      return api.sendMessage(
        `ЁЯШИ ${userName}, рждрзБржорж┐ ржкрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛! ржЖржмрж╛рж░ рждрзЛржорж╛рзЯ ржЖржирж▓рж╛ржо!`,
        threadID
      );
    });

  } catch (err) {
    console.error("тЭМ [ANTI-OUT ERROR]", err);
  }
};
